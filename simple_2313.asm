;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   ѕн июл 27 2020
; Processor: AT90S2313
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
; portB
.equ red_pin = 1 << 0
.equ green_pin = 1 << 1
.equ blue_pin = 1 << 2
.equ blue_pnum = 3
.equ yellow_pnum = 4
.equ yellow_pin = 1 << yellow_pnum


;portD
.equ setup_pin = 1 << 2
.equ setup_pnum = 2

.equ M5L = 100
.equ M5H = 0

;====================================================================
; VARIABLES
;====================================================================
.def temp = r16
.def countH = r17
.def countL = r18


;====================================================================
; MACROs
;====================================================================


.macro rout		; port, reg, k
	ldi @1, @2
	out @0, @1
.endmacro

.macro tout		; port, k
	rout @0, temp, @1
.endmacro

.macro toutpb		; k
	rout portb, temp, @0
.endmacro

.macro toutb		; port, reg, k
	ldi temp, @0
	out portB, temp
	out ddrB, temp
.endmacro

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      rjmp  Start
	reti	;	rjmp EXT_INT0 ; IRQ0 Handler
	reti	;	rjmp EXT_INT1 ; IRQ1 Handler
	reti	;	rjmp TIM_CAPT1 ; Timer1 Capture Handler
	reti	;	rjmp TIM_COMP1 ; Timer1 Compare Handler
	rjmp TIM_OVF1 ; Timer1 Overflow Handler
	rjmp TIM_OVF0 ; Timer0 Overflow Handler
	reti	;	rjmp UART_RXC ; UART RX Complete Handler
	reti	;	rjmp UART_DRE ; UDR Empty Handler
	reti	;	rjmp UART_TXC ; UART TX Complete Handler
	reti	;	rjmp ANA_COMP ; Analog Comparator Handler

;====================================================================
; CODE SEGMENT
;====================================================================
TIM_OVF1: ;________________________________

reti

TIM_OVF0: ;________________________________
	mov r4, temp
	pop r5
	;pop temp	; try to save pointer
	
	;pop countH
	;pop countL
	
	;;push temp
	clr temp

	;inc countL	 ; not work for this (theory: it is subi -1)
	ldi r19, 1
	add countL, r19
	adc countH, temp
	
	cpi countH, M5H
	brne notatime;endoftim
	cpi countL, M5L
	brne notatime
	
	ldi countL, 0
	ldi countH, 0
	
	ldi temp, yellow_pin
	out portB, temp
	
	notatime:
	
	
	;;pop temp
	
	;push countL
	;push countH
	
	;push temp
	push r5
	mov temp, r4
reti

Start: ;________________________________

; timers
; t0

	; prescaler
	ldi temp, 1 << cs02 | 1 << cs00	; clock select ck/1024
	out TCCR0, temp
	
	;tout GIMSK, 1 << int1 | 1 << int0	;	General Interrupt Mask
	
	tout	TIMSK,	1 << TOIE1 |	0 << OCIE1A |	0 << TICIE1 |	1 << TOIE0

;======
    ldi r16, red_pin
    ldi r17, green_pin
	add r16, r17
	out portB, r16	;проверка
	out ddrB, r16
	
	ldi temp, setup_pin
	out portD, temp
	
	ldi temp, RAMend
	out SPL, temp
	
	;  на вс€кий случай, дл€ переменных таймера, очищаем 2 €чейки стека
	clr temp
	clr r17
	push temp
	push temp
	
	sei	; interrupt ON
	
	
Loop: ;________________________________
	sbis pinD, setup_pnum
	out portB, temp	;rcall new
	
      rjmp  Loop
	  
new:
	sbic pinD, setup_pnum
	ret
	sbic pinD, setup_pnum
	ret
	sbic pinD, setup_pnum
	ret
	sbic pinD, setup_pnum
	ret
	out portB, temp	;проверка
	ret
	rjmp loop

;====================================================================
